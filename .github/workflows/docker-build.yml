# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths: 
      - '**/Dockerfile'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Install SHA256SUM
        run: sudo apt-get install -y coreutils

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker build
        run: |
          echo ${GITHUB_ACTOR}
          remote_repo="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          for d in */ ; do
            cd $d;
            CURRENT_DOCKERFILE_SHA256=$(sha256sum Dockerfile | awk '{print $1}')
            DOCKERFILE_SHA256=""
            if [ -f "Dockerfile.sha256" ]; then
              DOCKERFILE_SHA256=$(cat Dockerfile.sha256)
            fi
            if [ "$CURRENT_DOCKERFILE_SHA256" != "$DOCKERFILE_SHA256" ]; then
              TAG=${d%?}
              docker build -t geesedream/torch-cuda:$TAG -f Dockerfile .
              docker push geesedream/torch-cuda:$TAG
              echo $CURRENT_DOCKERFILE_SHA256 > Dockerfile.sha256
              git config user.name 'github-actions'
              git config user.email 'github-actions@github.com'
              git add Dockerfile.sha256
              git commit -m "Update SHA256 for $CURRENT_DOCKERFILE_SHA256"
              git push $remote_repo HEAD:main
            fi
            cd ..
          done
